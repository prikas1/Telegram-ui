{"ast":null,"code":"var _jsxFileName = \"E:\\\\priti\\\\whatsapp-ui\\\\whatsapp-web-ui\\\\src\\\\pages\\\\chat\\\\components\\\\option-menu\\\\index.tsx\",\n  _s = $RefreshSig$();\n// // import { useState } from \"react\";\n// // import Icon from \"common/components/icons\";\n// // import useCloseMenu from \"../../hooks/useCloseMenu\";\n// // import { Container, Button, Options, Option } from \"./styles\";\n// // import Header from \"pages/chat/chat-room-page/components/header\";\n// // import { ThemeIconContainer } from \"../sidebar/styles\";\n// // import { Action } from \"../sidebar/styles\";\n// // import { Actions } from \"../sidebar/styles\";\n// // import { useAppTheme } from \"common/theme\";\n// // import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\n// // import { ImageWrapper } from \"../sidebar/styles\";\n// // import { Avatar } from \"../sidebar/styles\";\n// // import { Profile } from \"./styles\";\n\n// // type OptionsMenuProps = {\n// //   iconClassName?: string;\n// //   className?: string;\n// //   iconId: string;\n// //   ariaLabel?: string;\n// //   options: string[];\n// //   position?: string;\n// //   showPressed?: boolean;\n// //   [x: string]: any;\n// // };\n\n// // export default function OptionsMenu(props: OptionsMenuProps) {\n// //   const [showOptions, setShowOptions] = useState(false);\n// //   const ref = useCloseMenu(() => setShowOptions(false));\n// //   const theme = useAppTheme();\n// //   const {\n// //     iconId,\n// //     options,\n// //     ariaLabel,\n// //     className,\n// //     iconClassName,\n// //     position = \"left\",\n// //     showPressed = true,\n// //   } = props;\n\n// //   const getBtnClassName = (): string => {\n// //     let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\n// //     _className += className ?? \"\";\n\n// //     return _className;\n// //   };\n\n// //   const getOptionsClassName = (): string => {\n// //     let className = showOptions ? \"active \" : \"\";\n// //     className += position === \"right\" ? \"right\" : \"\";\n\n// //     return className;\n// //   };\n\n// //   const handleClick = () => {\n// //     setShowOptions(!showOptions);\n// //   };\n\n// //   const handleChangeThemeMode = () => {\n// //     theme.onChangeThemeMode();\n// //   };\n\n// //   return (\n// //     <Container ref={ref}>\n// //       <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\n// //         <Icon id={iconId} className={iconClassName} />\n// //       </Button>\n\n// //       <Options className={getOptionsClassName()}>\n// //       <Profile>\n// //          <ImageWrapper>\n// //         <Avatar src=\"/assets/images/profile.png\" />\n// //         </ImageWrapper>\n// //         <Actions>\n// //           <ThemeIconContainer onClick={handleChangeThemeMode}>\n// //             {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\n// //           </ThemeIconContainer>\n\n// //         </Actions>\n// //         </Profile>\n// //         {options.map((option) => (\n// //           <Option key={option}>{option}</Option>\n// //         ))}\n// //       </Options>\n// //     </Container>\n// //   );\n// // }\n\n// import { useState, useEffect, useRef } from \"react\";\n// import Icon from \"common/components/icons\";\n// import useCloseMenu from \"../../hooks/useCloseMenu\";\n// import {\n//   Container,\n//   Button,\n//   Options,\n//   Option,\n//   Profile,\n//   ImageWrapper,\n//   Avatar,\n//   Actions,\n//   ThemeIconContainer,\n// } from \"./styles\";\n// import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\n// import { useAppTheme } from \"common/theme\";\n\n// type OptionsMenuProps = {\n//   iconClassName?: string;\n//   className?: string;\n//   iconId: string;\n//   ariaLabel?: string;\n//   options: string[];\n//   position?: string;\n//   showPressed?: boolean;\n//   [x: string]: any;\n// };\n\n// export default function OptionsMenu(props: OptionsMenuProps) {\n//   const theme = useAppTheme();\n//   const [showOptions, setShowOptions] = useState(false);\n//   const [touchStartX, setTouchStartX] = useState(0);\n//   const [touchEndX, setTouchEndX] = useState(0);\n//   const optionsRef = useRef<HTMLDivElement>(null);\n\n//   const {\n//     iconId,\n//     options,\n//     ariaLabel,\n//     className,\n//     iconClassName,\n//     position = \"left\",\n//     showPressed = true,\n//   } = props;\n\n//   const getBtnClassName = (): string => {\n//     let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\n//     _className += className ?? \"\";\n\n//     return _className;\n//   };\n\n//   const getOptionsClassName = (): string => {\n//     let className = showOptions ? \"active \" : \"\";\n//     className += position === \"right\" ? \"right\" : \"\";\n\n//     return className;\n//   };\n\n//   const handleClick = () => {\n//     setShowOptions(!showOptions);\n//   };\n\n//   const handleChangeThemeMode = () => {\n//     theme.onChangeThemeMode();\n//   };\n\n//   const handleTouchStart = (e: TouchEvent) => {\n//     setTouchStartX(e.targetTouches[0].clientX);\n//   };\n\n//   const handleTouchMove = (e: TouchEvent) => {\n//     setTouchEndX(e.targetTouches[0].clientX);\n//   };\n\n//   const handleTouchEnd = () => {\n//     if (touchStartX - touchEndX > 50) {\n//       setShowOptions(false);\n//     }\n//     if (touchEndX - touchStartX > 50) {\n//       setShowOptions(true);\n//     }\n//   };\n\n//   useEffect(() => {\n//     const optionsElement = optionsRef.current;\n//     if (optionsElement) {\n//       optionsElement.addEventListener(\"touchstart\", handleTouchStart);\n//       optionsElement.addEventListener(\"touchmove\", handleTouchMove);\n//       optionsElement.addEventListener(\"touchend\", handleTouchEnd);\n\n//       return () => {\n//         optionsElement.removeEventListener(\"touchstart\", handleTouchStart);\n//         optionsElement.removeEventListener(\"touchmove\", handleTouchMove);\n//         optionsElement.removeEventListener(\"touchend\", handleTouchEnd);\n//       };\n//     }\n//   }, [touchStartX, touchEndX]);\n\n//   return (\n//     <Container>\n//       <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\n//         <Icon id={iconId} className={iconClassName} />\n//       </Button>\n\n//       <Options className={getOptionsClassName()} ref={optionsRef}>\n//         <Profile>\n//           <ImageWrapper>\n//             <Avatar src=\"/assets/images/profile.png\" />\n//           </ImageWrapper>\n//           <Actions>\n//             <ThemeIconContainer onClick={handleChangeThemeMode}>\n//               {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\n//             </ThemeIconContainer>\n//           </Actions>\n//         </Profile>\n//         {options.map((option) => (\n//           <Option key={option}>{option}</Option>\n//         ))}\n//       </Options>\n//     </Container>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport Icon from \"common/components/icons\";\nimport useCloseMenu from \"../../hooks/useCloseMenu\";\nimport { Container, Button, Options, Option, Profile, ImageWrapper, Avatar, Actions, ThemeIconContainer } from \"./styles\";\nimport { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\nimport { useAppTheme } from \"common/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OptionsMenu(props) {\n  _s();\n  const [showOptions, setShowOptions] = useState(false);\n  const [touchStartX, setTouchStartX] = useState(0);\n  const [touchEndX, setTouchEndX] = useState(0);\n  const ref = useCloseMenu(() => setShowOptions(false));\n  const theme = useAppTheme();\n  const {\n    iconId,\n    options,\n    ariaLabel,\n    className,\n    iconClassName,\n    position = \"left\",\n    showPressed = true\n  } = props;\n  const getBtnClassName = () => {\n    let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\n    _className += className !== null && className !== void 0 ? className : \"\";\n    return _className;\n  };\n  const getOptionsClassName = () => {\n    let className = showOptions ? \"active \" : \"\";\n    className += position === \"right\" ? \"right\" : \"\";\n    return className;\n  };\n  const handleClick = () => {\n    setShowOptions(!showOptions);\n  };\n  const handleTouchStart = e => {\n    setTouchStartX(e.targetTouches[0].clientX);\n  };\n  const handleTouchMove = e => {\n    setTouchEndX(e.targetTouches[0].clientX);\n  };\n  const handleTouchEnd = () => {\n    if (touchStartX - touchEndX > 50) {\n      setShowOptions(false); // swipe left to close\n    }\n\n    if (touchEndX - touchStartX > 50) {\n      setShowOptions(true); // swipe right to open\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-label\": ariaLabel,\n      className: getBtnClassName(),\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        id: iconId,\n        className: iconClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      className: getOptionsClassName(),\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          children: [/*#__PURE__*/_jsxDEV(ImageWrapper, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: \"/assets/images/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Actions, {\n            children: /*#__PURE__*/_jsxDEV(ThemeIconContainer, {\n              onClick: theme.onChangeThemeMode,\n              children: theme.mode === \"light\" ? /*#__PURE__*/_jsxDEV(BsMoon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(BsFillMoonFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Priti Sahani\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(Option, {\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s(OptionsMenu, \"BxuZ2NVMdj08ZpLNyCi9nKxlinU=\", false, function () {\n  return [useCloseMenu, useAppTheme];\n});\n_c = OptionsMenu;\nvar _c;\n$RefreshReg$(_c, \"OptionsMenu\");","map":{"version":3,"names":["React","useState","Icon","useCloseMenu","Container","Button","Options","Option","Profile","ImageWrapper","Avatar","Actions","ThemeIconContainer","BsFillMoonFill","BsMoon","useAppTheme","OptionsMenu","props","showOptions","setShowOptions","touchStartX","setTouchStartX","touchEndX","setTouchEndX","ref","theme","iconId","options","ariaLabel","className","iconClassName","position","showPressed","getBtnClassName","_className","getOptionsClassName","handleClick","handleTouchStart","e","targetTouches","clientX","handleTouchMove","handleTouchEnd","onChangeThemeMode","mode","map","option"],"sources":["E:/priti/whatsapp-ui/whatsapp-web-ui/src/pages/chat/components/option-menu/index.tsx"],"sourcesContent":["// // import { useState } from \"react\";\r\n// // import Icon from \"common/components/icons\";\r\n// // import useCloseMenu from \"../../hooks/useCloseMenu\";\r\n// // import { Container, Button, Options, Option } from \"./styles\";\r\n// // import Header from \"pages/chat/chat-room-page/components/header\";\r\n// // import { ThemeIconContainer } from \"../sidebar/styles\";\r\n// // import { Action } from \"../sidebar/styles\";\r\n// // import { Actions } from \"../sidebar/styles\";\r\n// // import { useAppTheme } from \"common/theme\";\r\n// // import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\n// // import { ImageWrapper } from \"../sidebar/styles\";\r\n// // import { Avatar } from \"../sidebar/styles\";\r\n// // import { Profile } from \"./styles\";\r\n\r\n// // type OptionsMenuProps = {\r\n// //   iconClassName?: string;\r\n// //   className?: string;\r\n// //   iconId: string;\r\n// //   ariaLabel?: string;\r\n// //   options: string[];\r\n// //   position?: string;\r\n// //   showPressed?: boolean;\r\n// //   [x: string]: any;\r\n// // };\r\n\r\n// // export default function OptionsMenu(props: OptionsMenuProps) {\r\n// //   const [showOptions, setShowOptions] = useState(false);\r\n// //   const ref = useCloseMenu(() => setShowOptions(false));\r\n// //   const theme = useAppTheme();\r\n// //   const {\r\n// //     iconId,\r\n// //     options,\r\n// //     ariaLabel,\r\n// //     className,\r\n// //     iconClassName,\r\n// //     position = \"left\",\r\n// //     showPressed = true,\r\n// //   } = props;\r\n\r\n// //   const getBtnClassName = (): string => {\r\n// //     let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\r\n// //     _className += className ?? \"\";\r\n\r\n// //     return _className;\r\n// //   };\r\n\r\n// //   const getOptionsClassName = (): string => {\r\n// //     let className = showOptions ? \"active \" : \"\";\r\n// //     className += position === \"right\" ? \"right\" : \"\";\r\n\r\n// //     return className;\r\n// //   };\r\n\r\n// //   const handleClick = () => {\r\n// //     setShowOptions(!showOptions);\r\n// //   };\r\n  \r\n// //   const handleChangeThemeMode = () => {\r\n// //     theme.onChangeThemeMode();\r\n// //   };\r\n\r\n\r\n// //   return (\r\n// //     <Container ref={ref}>\r\n// //       <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\r\n// //         <Icon id={iconId} className={iconClassName} />\r\n// //       </Button>\r\n      \r\n// //       <Options className={getOptionsClassName()}>\r\n// //       <Profile>\r\n// //          <ImageWrapper>\r\n// //         <Avatar src=\"/assets/images/profile.png\" />\r\n// //         </ImageWrapper>\r\n// //         <Actions>\r\n// //           <ThemeIconContainer onClick={handleChangeThemeMode}>\r\n// //             {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n// //           </ThemeIconContainer>\r\n        \r\n// //         </Actions>\r\n// //         </Profile>\r\n// //         {options.map((option) => (\r\n// //           <Option key={option}>{option}</Option>\r\n// //         ))}\r\n// //       </Options>\r\n// //     </Container>\r\n// //   );\r\n// // }\r\n\r\n// import { useState, useEffect, useRef } from \"react\";\r\n// import Icon from \"common/components/icons\";\r\n// import useCloseMenu from \"../../hooks/useCloseMenu\";\r\n// import {\r\n//   Container,\r\n//   Button,\r\n//   Options,\r\n//   Option,\r\n//   Profile,\r\n//   ImageWrapper,\r\n//   Avatar,\r\n//   Actions,\r\n//   ThemeIconContainer,\r\n// } from \"./styles\";\r\n// import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\n// import { useAppTheme } from \"common/theme\";\r\n\r\n// type OptionsMenuProps = {\r\n//   iconClassName?: string;\r\n//   className?: string;\r\n//   iconId: string;\r\n//   ariaLabel?: string;\r\n//   options: string[];\r\n//   position?: string;\r\n//   showPressed?: boolean;\r\n//   [x: string]: any;\r\n// };\r\n\r\n// export default function OptionsMenu(props: OptionsMenuProps) {\r\n//   const theme = useAppTheme();\r\n//   const [showOptions, setShowOptions] = useState(false);\r\n//   const [touchStartX, setTouchStartX] = useState(0);\r\n//   const [touchEndX, setTouchEndX] = useState(0);\r\n//   const optionsRef = useRef<HTMLDivElement>(null);\r\n  \r\n//   const {\r\n//     iconId,\r\n//     options,\r\n//     ariaLabel,\r\n//     className,\r\n//     iconClassName,\r\n//     position = \"left\",\r\n//     showPressed = true,\r\n//   } = props;\r\n\r\n//   const getBtnClassName = (): string => {\r\n//     let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\r\n//     _className += className ?? \"\";\r\n\r\n//     return _className;\r\n//   };\r\n\r\n//   const getOptionsClassName = (): string => {\r\n//     let className = showOptions ? \"active \" : \"\";\r\n//     className += position === \"right\" ? \"right\" : \"\";\r\n\r\n//     return className;\r\n//   };\r\n\r\n//   const handleClick = () => {\r\n//     setShowOptions(!showOptions);\r\n//   };\r\n\r\n//   const handleChangeThemeMode = () => {\r\n//     theme.onChangeThemeMode();\r\n//   };\r\n\r\n//   const handleTouchStart = (e: TouchEvent) => {\r\n//     setTouchStartX(e.targetTouches[0].clientX);\r\n//   };\r\n\r\n//   const handleTouchMove = (e: TouchEvent) => {\r\n//     setTouchEndX(e.targetTouches[0].clientX);\r\n//   };\r\n\r\n//   const handleTouchEnd = () => {\r\n//     if (touchStartX - touchEndX > 50) {\r\n//       setShowOptions(false);\r\n//     }\r\n//     if (touchEndX - touchStartX > 50) {\r\n//       setShowOptions(true);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const optionsElement = optionsRef.current;\r\n//     if (optionsElement) {\r\n//       optionsElement.addEventListener(\"touchstart\", handleTouchStart);\r\n//       optionsElement.addEventListener(\"touchmove\", handleTouchMove);\r\n//       optionsElement.addEventListener(\"touchend\", handleTouchEnd);\r\n\r\n//       return () => {\r\n//         optionsElement.removeEventListener(\"touchstart\", handleTouchStart);\r\n//         optionsElement.removeEventListener(\"touchmove\", handleTouchMove);\r\n//         optionsElement.removeEventListener(\"touchend\", handleTouchEnd);\r\n//       };\r\n//     }\r\n//   }, [touchStartX, touchEndX]);\r\n\r\n//   return (\r\n//     <Container>\r\n//       <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\r\n//         <Icon id={iconId} className={iconClassName} />\r\n//       </Button>\r\n      \r\n//       <Options className={getOptionsClassName()} ref={optionsRef}>\r\n//         <Profile>\r\n//           <ImageWrapper>\r\n//             <Avatar src=\"/assets/images/profile.png\" />\r\n//           </ImageWrapper>\r\n//           <Actions>\r\n//             <ThemeIconContainer onClick={handleChangeThemeMode}>\r\n//               {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n//             </ThemeIconContainer>\r\n//           </Actions>\r\n//         </Profile>\r\n//         {options.map((option) => (\r\n//           <Option key={option}>{option}</Option>\r\n//         ))}\r\n//       </Options>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport Icon from \"common/components/icons\";\r\nimport useCloseMenu from \"../../hooks/useCloseMenu\";\r\nimport { Container, Button, Options, Option, Profile, ImageWrapper, Avatar, Actions, ThemeIconContainer } from \"./styles\";\r\nimport { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\nimport { useAppTheme } from \"common/theme\";\r\n\r\ntype OptionsMenuProps = {\r\n  iconClassName?: string;\r\n  className?: string;\r\n  iconId: string;\r\n  ariaLabel?: string;\r\n  options: string[];\r\n  position?: string;\r\n  showPressed?: boolean;\r\n  [x: string]: any;\r\n};\r\n\r\nexport default function OptionsMenu(props: OptionsMenuProps) {\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [touchStartX, setTouchStartX] = useState(0);\r\n  const [touchEndX, setTouchEndX] = useState(0);\r\n  const ref = useCloseMenu(() => setShowOptions(false));\r\n  const theme = useAppTheme();\r\n\r\n  const {\r\n    iconId,\r\n    options,\r\n    ariaLabel,\r\n    className,\r\n    iconClassName,\r\n    position = \"left\",\r\n    showPressed = true,\r\n  } = props;\r\n\r\n  const getBtnClassName = (): string => {\r\n    let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\r\n    _className += className ?? \"\";\r\n\r\n    return _className;\r\n  };\r\n\r\n  const getOptionsClassName = (): string => {\r\n    let className = showOptions ? \"active \" : \"\";\r\n    className += position === \"right\" ? \"right\" : \"\";\r\n\r\n    return className;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    setTouchStartX(e.targetTouches[0].clientX);\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    setTouchEndX(e.targetTouches[0].clientX);\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (touchStartX - touchEndX > 50) {\r\n      setShowOptions(false); // swipe left to close\r\n    }\r\n    if (touchEndX - touchStartX > 50) {\r\n      setShowOptions(true); // swipe right to open\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\r\n        <Icon id={iconId} className={iconClassName} />\r\n      </Button>\r\n      \r\n      <Options\r\n        className={getOptionsClassName()}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n      >\r\n        <div>\r\n        <Profile>\r\n          <ImageWrapper>\r\n            <Avatar src=\"/assets/images/profile.png\" />\r\n          </ImageWrapper>\r\n          <Actions>\r\n            <ThemeIconContainer onClick={theme.onChangeThemeMode}>\r\n              {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n            </ThemeIconContainer>\r\n          </Actions>\r\n          <p>Priti Sahani</p>\r\n        </Profile>\r\n        </div>\r\n        \r\n        {options.map((option) => (\r\n          <Option key={option}>{option}</Option>\r\n        ))}\r\n      </Options>\r\n    </Container>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAgB,OAAO;AAC/C,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,UAAU;AACzH,SAASC,cAAc,EAAEC,MAAM,QAAQ,gBAAgB;AACvD,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
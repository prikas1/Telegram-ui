{"ast":null,"code":"var _jsxFileName = \"E:\\\\priti\\\\whatsapp-ui\\\\whatsapp-web-ui\\\\src\\\\pages\\\\chat\\\\chat-room-page\\\\components\\\\messages-list\\\\index.tsx\",\n  _s = $RefreshSig$();\n// import { forwardRef, useMemo } from \"react\";\n// import { useParams } from \"react-router-dom\";\n\n// import Icon from \"common/components/icons\";\n// import useScrollToBottom from \"./hooks/useScrollToBottom\";\n// import { getMessages, Message } from \"./data/get-messages\";\n// import {\n//   ChatMessage,\n//   ChatMessageFiller,\n//   ChatMessageFooter,\n//   Container,\n//   Date,\n//   DateWrapper,\n//   EncryptionMessage,\n//   MessageGroup,\n// } from \"./styles\";\n\n// type MessagesListProps = {\n//   onShowBottomIcon: Function;\n//   shouldScrollToBottom?: boolean;\n// };\n\n// export default function MessagesList(props: MessagesListProps) {\n//   const { onShowBottomIcon, shouldScrollToBottom } = props;\n\n//   const params = useParams();\n//   const messages = useMemo(() => {\n//     return getMessages();\n//     // eslint-disable-next-line\n//   }, [params.id]);\n//   const { containerRef, lastMessageRef } = useScrollToBottom(\n//     onShowBottomIcon,\n//     shouldScrollToBottom,\n//     params.id\n//   );\n\n//   return (\n//     <Container ref={containerRef}>\n//       <EncryptionMessage>\n//         <Icon id=\"lock\" className=\"icon\" />\n//         Messages are end-to-end encrypted. No one outside of this chat, not even WhatsApp, can read\n//         or listen to them. Click to learn more.\n//       </EncryptionMessage>\n//       <DateWrapper>\n//         <Date> TODAY </Date>\n//       </DateWrapper>\n//       <MessageGroup>\n//         {messages.map((message, i) => {\n//           if (i === messages.length - 1) {\n//             return <SingleMessage key={message.id} message={message} ref={lastMessageRef} />;\n//           } else {\n//             return <SingleMessage key={message.id} message={message} />;\n//           }\n//         })}\n//       </MessageGroup>\n//     </Container>\n//   );\n// }\n\n// const SingleMessage = forwardRef((props: { message: Message }, ref: any) => {\n//   const { message } = props;\n\n//   return (\n//     <ChatMessage\n//       key={message.id}\n//       className={message.isOpponent ? \"chat__msg--received\" : \"chat__msg--sent\"}\n//       ref={ref}\n//     >\n//       <span>{message.body}</span>\n//       <ChatMessageFiller />\n//       <ChatMessageFooter>\n//         <span>{message.timestamp}</span>\n//         {!message.isOpponent && (\n//           <Icon\n//             id={`${message.messageStatus === \"SENT\" ? \"singleTick\" : \"doubleTick\"}`}\n//             className={`chat__msg-status-icon ${\n//               message.messageStatus === \"READ\" ? \"chat__msg-status-icon--blue\" : \"\"\n//             }`}\n//           />\n//         )}\n//       </ChatMessageFooter>\n//     </ChatMessage>\n//   );\n// });\n\nimport { forwardRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Icon from \"common/components/icons\";\nimport useScrollToBottom from \"./hooks/useScrollToBottom\";\nimport { ChatMessage, ChatMessageFiller, ChatMessageFooter, Container, Date, DateWrapper, MessageGroup } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessagesList(props) {\n  _s();\n  const {\n    onShowBottomIcon,\n    shouldScrollToBottom\n  } = props;\n  const params = useParams();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`https://devapi.beyondchats.com/api/get_chat_messages?chat_id=${params.id}`);\n        setMessages(response.data.data); // Adjust this line according to your API response structure\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    fetchMessages();\n  }, [params.id]);\n  const {\n    containerRef,\n    lastMessageRef\n  } = useScrollToBottom(onShowBottomIcon, shouldScrollToBottom, params.id);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(DateWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Date, {\n        children: \" TODAY \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageGroup, {\n      children: messages.map((message, i) => {\n        if (i === messages.length - 1) {\n          return /*#__PURE__*/_jsxDEV(SingleMessage, {\n            message: message,\n            ref: lastMessageRef\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 20\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(SingleMessage, {\n            message: message\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesList, \"6DAnDb8O7PHToqRwTsm4XSxBZmQ=\", false, function () {\n  return [useParams, useScrollToBottom];\n});\n_c = MessagesList;\nconst SingleMessage = /*#__PURE__*/forwardRef(_c2 = (props, ref) => {\n  const {\n    message\n  } = props;\n  return /*#__PURE__*/_jsxDEV(ChatMessage, {\n    className: message.isOpponent ? \"chat__msg--received\" : \"chat__msg--sent\",\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: message.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatMessageFiller, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatMessageFooter, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: message.timestamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), !message.isOpponent && /*#__PURE__*/_jsxDEV(Icon, {\n        id: `${message.messageStatus === \"SENT\" ? \"singleTick\" : \"doubleTick\"}`,\n        className: `chat__msg-status-icon ${message.messageStatus === \"READ\" ? \"chat__msg-status-icon--blue\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, message.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n});\n_c3 = SingleMessage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MessagesList\");\n$RefreshReg$(_c2, \"SingleMessage$forwardRef\");\n$RefreshReg$(_c3, \"SingleMessage\");","map":{"version":3,"names":["forwardRef","useState","useEffect","useParams","axios","Icon","useScrollToBottom","ChatMessage","ChatMessageFiller","ChatMessageFooter","Container","Date","DateWrapper","MessageGroup","MessagesList","props","onShowBottomIcon","shouldScrollToBottom","params","messages","setMessages","fetchMessages","response","get","id","data","error","console","containerRef","lastMessageRef","map","message","i","length","SingleMessage","ref","isOpponent","body","timestamp","messageStatus"],"sources":["E:/priti/whatsapp-ui/whatsapp-web-ui/src/pages/chat/chat-room-page/components/messages-list/index.tsx"],"sourcesContent":["// import { forwardRef, useMemo } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// import Icon from \"common/components/icons\";\r\n// import useScrollToBottom from \"./hooks/useScrollToBottom\";\r\n// import { getMessages, Message } from \"./data/get-messages\";\r\n// import {\r\n//   ChatMessage,\r\n//   ChatMessageFiller,\r\n//   ChatMessageFooter,\r\n//   Container,\r\n//   Date,\r\n//   DateWrapper,\r\n//   EncryptionMessage,\r\n//   MessageGroup,\r\n// } from \"./styles\";\r\n\r\n// type MessagesListProps = {\r\n//   onShowBottomIcon: Function;\r\n//   shouldScrollToBottom?: boolean;\r\n// };\r\n\r\n// export default function MessagesList(props: MessagesListProps) {\r\n//   const { onShowBottomIcon, shouldScrollToBottom } = props;\r\n\r\n//   const params = useParams();\r\n//   const messages = useMemo(() => {\r\n//     return getMessages();\r\n//     // eslint-disable-next-line\r\n//   }, [params.id]);\r\n//   const { containerRef, lastMessageRef } = useScrollToBottom(\r\n//     onShowBottomIcon,\r\n//     shouldScrollToBottom,\r\n//     params.id\r\n//   );\r\n\r\n//   return (\r\n//     <Container ref={containerRef}>\r\n//       <EncryptionMessage>\r\n//         <Icon id=\"lock\" className=\"icon\" />\r\n//         Messages are end-to-end encrypted. No one outside of this chat, not even WhatsApp, can read\r\n//         or listen to them. Click to learn more.\r\n//       </EncryptionMessage>\r\n//       <DateWrapper>\r\n//         <Date> TODAY </Date>\r\n//       </DateWrapper>\r\n//       <MessageGroup>\r\n//         {messages.map((message, i) => {\r\n//           if (i === messages.length - 1) {\r\n//             return <SingleMessage key={message.id} message={message} ref={lastMessageRef} />;\r\n//           } else {\r\n//             return <SingleMessage key={message.id} message={message} />;\r\n//           }\r\n//         })}\r\n//       </MessageGroup>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// const SingleMessage = forwardRef((props: { message: Message }, ref: any) => {\r\n//   const { message } = props;\r\n\r\n//   return (\r\n//     <ChatMessage\r\n//       key={message.id}\r\n//       className={message.isOpponent ? \"chat__msg--received\" : \"chat__msg--sent\"}\r\n//       ref={ref}\r\n//     >\r\n//       <span>{message.body}</span>\r\n//       <ChatMessageFiller />\r\n//       <ChatMessageFooter>\r\n//         <span>{message.timestamp}</span>\r\n//         {!message.isOpponent && (\r\n//           <Icon\r\n//             id={`${message.messageStatus === \"SENT\" ? \"singleTick\" : \"doubleTick\"}`}\r\n//             className={`chat__msg-status-icon ${\r\n//               message.messageStatus === \"READ\" ? \"chat__msg-status-icon--blue\" : \"\"\r\n//             }`}\r\n//           />\r\n//         )}\r\n//       </ChatMessageFooter>\r\n//     </ChatMessage>\r\n//   );\r\n// });\r\n\r\n\r\nimport { forwardRef, useMemo, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Icon from \"common/components/icons\";\r\nimport useScrollToBottom from \"./hooks/useScrollToBottom\";\r\nimport {\r\n  ChatMessage,\r\n  ChatMessageFiller,\r\n  ChatMessageFooter,\r\n  Container,\r\n  Date,\r\n  DateWrapper,\r\n  EncryptionMessage,\r\n  MessageGroup,\r\n} from \"./styles\";\r\n\r\ntype MessagesListProps = {\r\n  onShowBottomIcon: Function;\r\n  shouldScrollToBottom?: boolean;\r\n};\r\n\r\ntype Message = {\r\n  id: string;\r\n  body: string;\r\n  timestamp: string;\r\n  isOpponent: boolean;\r\n  messageStatus: string;\r\n};\r\n\r\nexport default function MessagesList(props: MessagesListProps) {\r\n  const { onShowBottomIcon, shouldScrollToBottom } = props;\r\n\r\n  const params = useParams();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://devapi.beyondchats.com/api/get_chat_messages?chat_id=${params.id}`\r\n        );\r\n        setMessages(response.data.data); // Adjust this line according to your API response structure\r\n      } catch (error) {\r\n        console.error(\"Error fetching messages:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [params.id]);\r\n\r\n  const { containerRef, lastMessageRef } = useScrollToBottom(\r\n    onShowBottomIcon,\r\n    shouldScrollToBottom,\r\n    params.id\r\n  );\r\n\r\n  return (\r\n    <Container ref={containerRef}>\r\n      <DateWrapper>\r\n        <Date> TODAY </Date>\r\n      </DateWrapper>\r\n      <MessageGroup>\r\n        {messages.map((message, i) => {\r\n          if (i === messages.length - 1) {\r\n            return <SingleMessage key={message.id} message={message} ref={lastMessageRef} />;\r\n          } else {\r\n            return <SingleMessage key={message.id} message={message} />;\r\n          }\r\n        })}\r\n      </MessageGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst SingleMessage = forwardRef((props: { message: Message }, ref: any) => {\r\n  const { message } = props;\r\n\r\n  return (\r\n    <ChatMessage\r\n      key={message.id}\r\n      className={message.isOpponent ? \"chat__msg--received\" : \"chat__msg--sent\"}\r\n      ref={ref}\r\n    >\r\n      <span>{message.body}</span>\r\n      <ChatMessageFiller />\r\n      <ChatMessageFooter>\r\n        <span>{message.timestamp}</span>\r\n        {!message.isOpponent && (\r\n          <Icon\r\n            id={`${message.messageStatus === \"SENT\" ? \"singleTick\" : \"doubleTick\"}`}\r\n            className={`chat__msg-status-icon ${\r\n              message.messageStatus === \"READ\" ? \"chat__msg-status-icon--blue\" : \"\"\r\n            }`}\r\n          />\r\n        )}\r\n      </ChatMessageFooter>\r\n    </ChatMessage>\r\n  );\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
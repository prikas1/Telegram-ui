{"ast":null,"code":"var _jsxFileName = \"E:\\\\priti\\\\whatsapp-ui\\\\telegram-ui\\\\src\\\\common\\\\theme\\\\index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./dark\";\nimport { lightTheme } from \"./light\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppThemeContext = /*#__PURE__*/createContext({\n  mode: \"dark\",\n  onChangeThemeMode: () => {}\n});\nfunction AppThemeProvider(props) {\n  _s();\n  const {\n    children\n  } = props;\n  const [themeMode, setThemeMode] = useState(() => {\n    const theme = window.localStorage.getItem(\"theme\");\n    return theme !== null && theme !== void 0 ? theme : \"dark\";\n  });\n  function handleChangeThemeMode() {\n    let theme;\n    if (themeMode === \"dark\") theme = \"light\";else theme = \"dark\";\n    window.localStorage.setItem(\"theme\", theme);\n    setThemeMode(theme);\n  }\n  function getTheme() {\n    return themeMode === \"dark\" ? darkTheme : lightTheme;\n  }\n  return /*#__PURE__*/_jsxDEV(AppThemeContext.Provider, {\n    value: {\n      mode: themeMode,\n      onChangeThemeMode: handleChangeThemeMode\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: getTheme(),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AppThemeProvider, \"lgr+CHHq8EYlL42WQBSaM0WFIP0=\");\n_c = AppThemeProvider;\nconst useAppTheme = () => {\n  _s2();\n  return useContext(AppThemeContext);\n};\n_s2(useAppTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AppThemeProvider;\nexport { useAppTheme, AppThemeContext };\nvar _c;\n$RefreshReg$(_c, \"AppThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useState","ThemeProvider","darkTheme","lightTheme","AppThemeContext","mode","onChangeThemeMode","AppThemeProvider","props","children","themeMode","setThemeMode","theme","window","localStorage","getItem","handleChangeThemeMode","setItem","getTheme","useAppTheme"],"sources":["E:/priti/whatsapp-ui/telegram-ui/src/common/theme/index.tsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { DefaultTheme, ThemeProvider } from \"styled-components\";\r\n\r\nimport { darkTheme } from \"./dark\";\r\nimport { lightTheme } from \"./light\";\r\n\r\ntype ThemeMode = \"light\" | \"dark\";\r\n\r\ntype Theme = {\r\n  mode: ThemeMode;\r\n  onChangeThemeMode: () => void;\r\n};\r\n\r\nconst AppThemeContext = createContext<Theme>({ mode: \"dark\", onChangeThemeMode: () => {} });\r\n\r\nfunction AppThemeProvider(props: { children: any }) {\r\n  const { children } = props;\r\n  const [themeMode, setThemeMode] = useState<ThemeMode>(() => {\r\n    const theme = window.localStorage.getItem(\"theme\");\r\n    return theme ?? (\"dark\" as any);\r\n  });\r\n\r\n  function handleChangeThemeMode(): void {\r\n    let theme: ThemeMode;\r\n\r\n    if (themeMode === \"dark\") theme = \"light\";\r\n    else theme = \"dark\";\r\n\r\n    window.localStorage.setItem(\"theme\", theme);\r\n    setThemeMode(theme);\r\n  }\r\n\r\n  function getTheme(): DefaultTheme {\r\n    return themeMode === \"dark\" ? darkTheme : lightTheme;\r\n  }\r\n\r\n  return (\r\n    <AppThemeContext.Provider value={{ mode: themeMode, onChangeThemeMode: handleChangeThemeMode }}>\r\n      <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\r\n    </AppThemeContext.Provider>\r\n  );\r\n}\r\n\r\nconst useAppTheme = () => useContext(AppThemeContext);\r\n\r\nexport default AppThemeProvider;\r\nexport { useAppTheme, AppThemeContext };\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAAuBC,aAAa,QAAQ,mBAAmB;AAE/D,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,UAAU,QAAQ,SAAS;AAAC;AASrC,MAAMC,eAAe,gBAAGN,aAAa,CAAQ;EAAEO,IAAI,EAAE,MAAM;EAAEC,iBAAiB,EAAE,MAAM,CAAC;AAAE,CAAC,CAAC;AAE3F,SAASC,gBAAgB,CAACC,KAAwB,EAAE;EAAA;EAClD,MAAM;IAAEC;EAAS,CAAC,GAAGD,KAAK;EAC1B,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAY,MAAM;IAC1D,MAAMY,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAClD,OAAOH,KAAK,aAALA,KAAK,cAALA,KAAK,GAAK,MAAM;EACzB,CAAC,CAAC;EAEF,SAASI,qBAAqB,GAAS;IACrC,IAAIJ,KAAgB;IAEpB,IAAIF,SAAS,KAAK,MAAM,EAAEE,KAAK,GAAG,OAAO,CAAC,KACrCA,KAAK,GAAG,MAAM;IAEnBC,MAAM,CAACC,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC3CD,YAAY,CAACC,KAAK,CAAC;EACrB;EAEA,SAASM,QAAQ,GAAiB;IAChC,OAAOR,SAAS,KAAK,MAAM,GAAGR,SAAS,GAAGC,UAAU;EACtD;EAEA,oBACE,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEE,IAAI,EAAEK,SAAS;MAAEJ,iBAAiB,EAAEU;IAAsB,CAAE;IAAA,uBAC7F,QAAC,aAAa;MAAC,KAAK,EAAEE,QAAQ,EAAG;MAAA,UAAET;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAiB;IAAA;IAAA;IAAA;EAAA,QACnC;AAE/B;AAAC,GA1BQF,gBAAgB;AAAA,KAAhBA,gBAAgB;AA4BzB,MAAMY,WAAW,GAAG;EAAA;EAAA,OAAMpB,UAAU,CAACK,eAAe,CAAC;AAAA;AAAC,IAAhDe,WAAW;AAEjB,eAAeZ,gBAAgB;AAC/B,SAASY,WAAW,EAAEf,eAAe;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
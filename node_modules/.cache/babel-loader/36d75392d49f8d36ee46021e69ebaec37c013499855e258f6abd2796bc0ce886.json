{"ast":null,"code":"var _jsxFileName = \"E:\\\\priti\\\\whatsapp-ui\\\\whatsapp-web-ui\\\\src\\\\pages\\\\chat\\\\context\\\\chat.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { inbox } from \"../data/inbox\";\n// import { Inbox } from \"common/types/common.type\";\n\n// type User = {\n//   name: string;\n//   image: string;\n// };\n\n// type ChatContextProp = {\n//   user: User;\n//   inbox: Inbox[];\n//   activeChat?: Inbox;\n//   onChangeChat: (chat: Inbox) => void;\n// };\n\n// const initialValue: ChatContextProp = {\n//   user: { name: \"Jazim Abbas\", image: \"/assets/images/girl.jpeg\" },\n//   inbox,\n//   onChangeChat() {\n//     throw new Error();\n//   },\n// };\n\n// export const ChatContext = React.createContext<ChatContextProp>(initialValue);\n\n// export default function ChatProvider(props: { children: any }) {\n//   const { children } = props;\n\n//   const [user] = useState<User>(initialValue.user);\n//   const [inbox] = useState<Inbox[]>(initialValue.inbox);\n//   const [activeChat, setActiveChat] = useState<Inbox>();\n\n//   const handleChangeChat = (chat: Inbox) => {\n//     setActiveChat(chat);\n//   };\n\n//   return (\n//     <ChatContext.Provider value={{ user, inbox, activeChat, onChangeChat: handleChangeChat }}>\n//       {children}\n//     </ChatContext.Provider>\n//   );\n// }\n\n// export const useChatContext = () => React.useContext(ChatContext);\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  user: {\n    name: \"Jazim Abbas\",\n    image: \"/assets/images/girl.jpeg\"\n  },\n  inbox: [],\n  onChangeChat() {\n    throw new Error();\n  }\n};\nexport const ChatContext = /*#__PURE__*/React.createContext(initialValue);\nexport default function ChatProvider(props) {\n  _s();\n  const {\n    children\n  } = props;\n  const [user] = useState(initialValue.user);\n  const [inbox, setInbox] = useState(initialValue.inbox);\n  const [activeChat, setActiveChat] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchInbox = async () => {\n      try {\n        const response = await axios.get('https://devapi.beyondchats.com/api/get_all_chats?page=1');\n        setInbox(response.data); // Adjust according to your API response structure\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch data');\n        setLoading(false);\n      }\n    };\n    fetchInbox();\n  }, []);\n  const handleChangeChat = chat => {\n    setActiveChat(chat);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      user,\n      inbox,\n      activeChat,\n      onChangeChat: handleChangeChat\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatProvider, \"mY8Ep9ZHcTZCpzoByRO8Zf74Nyo=\");\n_c = ChatProvider;\nexport const useChatContext = () => {\n  _s2();\n  return React.useContext(ChatContext);\n};\n_s2(useChatContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","useState","useEffect","axios","initialValue","user","name","image","inbox","onChangeChat","Error","ChatContext","createContext","ChatProvider","props","children","setInbox","activeChat","setActiveChat","loading","setLoading","error","setError","fetchInbox","response","get","data","err","handleChangeChat","chat","useChatContext","useContext"],"sources":["E:/priti/whatsapp-ui/whatsapp-web-ui/src/pages/chat/context/chat.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { inbox } from \"../data/inbox\";\r\n// import { Inbox } from \"common/types/common.type\";\r\n\r\n// type User = {\r\n//   name: string;\r\n//   image: string;\r\n// };\r\n\r\n// type ChatContextProp = {\r\n//   user: User;\r\n//   inbox: Inbox[];\r\n//   activeChat?: Inbox;\r\n//   onChangeChat: (chat: Inbox) => void;\r\n// };\r\n\r\n// const initialValue: ChatContextProp = {\r\n//   user: { name: \"Jazim Abbas\", image: \"/assets/images/girl.jpeg\" },\r\n//   inbox,\r\n//   onChangeChat() {\r\n//     throw new Error();\r\n//   },\r\n// };\r\n\r\n// export const ChatContext = React.createContext<ChatContextProp>(initialValue);\r\n\r\n// export default function ChatProvider(props: { children: any }) {\r\n//   const { children } = props;\r\n\r\n//   const [user] = useState<User>(initialValue.user);\r\n//   const [inbox] = useState<Inbox[]>(initialValue.inbox);\r\n//   const [activeChat, setActiveChat] = useState<Inbox>();\r\n\r\n//   const handleChangeChat = (chat: Inbox) => {\r\n//     setActiveChat(chat);\r\n//   };\r\n\r\n//   return (\r\n//     <ChatContext.Provider value={{ user, inbox, activeChat, onChangeChat: handleChangeChat }}>\r\n//       {children}\r\n//     </ChatContext.Provider>\r\n//   );\r\n// }\r\n\r\n// export const useChatContext = () => React.useContext(ChatContext);\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Inbox } from \"common/types/common.type\";\r\n\r\ntype User = {\r\n  name: string;\r\n  image: string;\r\n};\r\n\r\ntype ChatContextProp = {\r\n  user: User;\r\n  inbox: Inbox[];\r\n  activeChat?: Inbox;\r\n  onChangeChat: (chat: Inbox) => void;\r\n};\r\n\r\nconst initialValue: ChatContextProp = {\r\n  user: { name: \"Jazim Abbas\", image: \"/assets/images/girl.jpeg\" },\r\n  inbox: [],\r\n  onChangeChat() {\r\n    throw new Error();\r\n  },\r\n};\r\n\r\nexport const ChatContext = React.createContext<ChatContextProp>(initialValue);\r\n\r\nexport default function ChatProvider(props: { children: any }) {\r\n  const { children } = props;\r\n\r\n  const [user] = useState<User>(initialValue.user);\r\n  const [inbox, setInbox] = useState<Inbox[]>(initialValue.inbox);\r\n  const [activeChat, setActiveChat] = useState<Inbox>();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchInbox = async () => {\r\n      try {\r\n        const response = await axios.get('https://devapi.beyondchats.com/api/get_all_chats?page=1');\r\n        setInbox(response.data); // Adjust according to your API response structure\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to fetch data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInbox();\r\n  }, []);\r\n\r\n  const handleChangeChat = (chat: Inbox) => {\r\n    setActiveChat(chat);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ user, inbox, activeChat, onChangeChat: handleChangeChat }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useChatContext = () => React.useContext(ChatContext);\r\n\r\n"],"mappings":";;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAe1B,MAAMC,YAA6B,GAAG;EACpCC,IAAI,EAAE;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE;EAA2B,CAAC;EAChEC,KAAK,EAAE,EAAE;EACTC,YAAY,GAAG;IACb,MAAM,IAAIC,KAAK,EAAE;EACnB;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAa,CAAkBR,YAAY,CAAC;AAE7E,eAAe,SAASS,YAAY,CAACC,KAAwB,EAAE;EAAA;EAC7D,MAAM;IAAEC;EAAS,CAAC,GAAGD,KAAK;EAE1B,MAAM,CAACT,IAAI,CAAC,GAAGJ,QAAQ,CAAOG,YAAY,CAACC,IAAI,CAAC;EAChD,MAAM,CAACG,KAAK,EAAEQ,QAAQ,CAAC,GAAGf,QAAQ,CAAUG,YAAY,CAACI,KAAK,CAAC;EAC/D,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,EAAS;EACrD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMqB,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,yDAAyD,CAAC;QAC3FT,QAAQ,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACzBN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZL,QAAQ,CAAC,sBAAsB,CAAC;QAChCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAIC,IAAW,IAAK;IACxCX,aAAa,CAACW,IAAI,CAAC;EACrB,CAAC;EAED,IAAIV,OAAO,EAAE;IACX,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EAEA,IAAIE,KAAK,EAAE;IACT,oBAAO;MAAA,UAAMA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAC3B;EAEA,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEhB,IAAI;MAAEG,KAAK;MAAES,UAAU;MAAER,YAAY,EAAEmB;IAAiB,CAAE;IAAA,UACtFb;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B;AAAC,GAzCuBF,YAAY;AAAA,KAAZA,YAAY;AA2CpC,OAAO,MAAMiB,cAAc,GAAG;EAAA;EAAA,OAAM9B,KAAK,CAAC+B,UAAU,CAACpB,WAAW,CAAC;AAAA;AAAC,IAArDmB,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
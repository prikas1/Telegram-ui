{"ast":null,"code":"var _jsxFileName = \"E:\\\\priti\\\\whatsapp-ui\\\\telegram-ui\\\\src\\\\pages\\\\chat\\\\components\\\\sidebar\\\\index.tsx\",\n  _s = $RefreshSig$();\n// import { useNavigate } from \"react-router-dom\";\n// import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\n\n// import SidebarAlert from \"./alert\";\n// import InboxContact from \"./contacts\";\n// import OptionsMenu from \"../option-menu\";\n// import SearchField from \"../search-field\";\n// import Icon from \"common/components/icons\";\n// import { useAppTheme } from \"common/theme\";\n// import { Inbox } from \"common/types/common.type\";\n// import { useChatContext } from \"pages/chat/context/chat\";\n// import {\n//   Actions,\n//   Avatar,\n//   ContactContainer,\n//   Header,\n//   ImageWrapper,\n//   SidebarContainer,\n//   ThemeIconContainer,\n// } from \"./styles\";\n\n// export default function Sidebar() {\n//   const theme = useAppTheme();\n//   const navigate = useNavigate();\n//   const chatCtx = useChatContext();\n\n//   const handleChangeThemeMode = () => {\n//     theme.onChangeThemeMode();\n//   };\n\n//   const handleChangeChat = (chat: Inbox) => {\n//     chatCtx.onChangeChat(chat);\n//     navigate(\"/\" + chat.id);\n//   };\n\n//   return (\n//     <SidebarContainer>\n//       <Header>\n//         <ImageWrapper>\n//           <Avatar src=\"/assets/images/profile.png\" />\n//         </ImageWrapper>\n//         <Actions>\n//           <ThemeIconContainer onClick={handleChangeThemeMode}>\n//             {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\n//           </ThemeIconContainer>\n//           <button aria-label=\"Status\">\n//             <Icon id=\"status\" className=\"icon\" />\n//           </button>\n//           <button aria-label=\"New chat\">\n//             <Icon id=\"chat\" className=\"icon\" />\n//           </button>\n//           <OptionsMenu\n//             iconClassName=\"icon\"\n//             className=\"icon\"\n//             ariaLabel=\"Menu\"\n//             iconId=\"menu\"\n//             options={[\n//               \"New group\",\n//               \"Create a room\",\n//               \"Profile\",\n//               \"Archived\",\n//               \"Starred\",\n//               \"Settings\",\n//               \"Log out\",\n//             ]}\n//           />\n//         </Actions>\n//       </Header>\n//       <SidebarAlert />\n//       <SearchField />\n//       <ContactContainer>\n//         {chatCtx.inbox.map((inbox) => (\n//           <InboxContact\n//             key={inbox.id}\n//             inbox={inbox}\n//             isActive={inbox.id === chatCtx.activeChat?.id}\n//             onChangeChat={handleChangeChat}\n//           />\n//         ))}\n//       </ContactContainer>\n//     </SidebarContainer>\n//   );\n// }\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react'; // Import useState hook\n\nimport SidebarAlert from \"./alert\";\nimport InboxContact from \"./contacts\";\nimport OptionsMenu from \"../option-menu\";\nimport Icon from \"common/components/icons\";\nimport { useAppTheme } from \"common/theme\";\nimport { useChatContext } from \"pages/chat/context/chat\";\nimport { Title } from \"pages/splash/styles\";\nimport { Action, Actions, ContactContainer, Header, SidebarContainer } from \"./styles\";\nimport Tabs from \"./tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar() {\n  _s();\n  const theme = useAppTheme();\n  const navigate = useNavigate();\n  const chatCtx = useChatContext();\n  const [activeTab, setActiveTab] = useState('ALL'); // State for active tab\n\n  const tabCounts = {\n    ALL: chatCtx.inbox.length,\n    Regulars: chatCtx.inbox.filter(chat => chat.isRegular).length,\n    Unread: chatCtx.inbox.filter(chat => !chat.isRead).length,\n    Previous: chatCtx.inbox.filter(chat => chat.isPrevious).length,\n    abc: 0,\n    // Replace with actual count logic if available\n    efch: 0,\n    // Replace with actual count logic if available\n    sjvjhwe: 0 // Replace with actual count logic if available\n  };\n\n  const handleChangeThemeMode = () => {\n    theme.onChangeThemeMode();\n  };\n  const handleChangeChat = chat => {\n    chatCtx.onChangeChat(chat);\n    navigate(\"/\" + chat.id);\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n    // Additional logic for tab change if necessary\n  };\n\n  return /*#__PURE__*/_jsxDEV(SidebarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(OptionsMenu, {\n        iconClassName: \"icon\",\n        className: \"icon\",\n        ariaLabel: \"Menu\",\n        iconId: \"menu\",\n        options: [\"New group\", \"Create a room\", \"Profile\", \"Archived\", \"Starred\", \"Settings\", \"Log out\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Telegram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Actions, {\n        children: /*#__PURE__*/_jsxDEV(Action, {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            id: \"search\",\n            className: \"icon search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      activeTab: activeTab,\n      onChangeTab: handleTabChange,\n      tabCounts: tabCounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(SidebarAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactContainer, {\n      children: chatCtx.inbox.map(inbox => {\n        var _chatCtx$activeChat;\n        return /*#__PURE__*/_jsxDEV(InboxContact, {\n          inbox: inbox,\n          isActive: inbox.id === ((_chatCtx$activeChat = chatCtx.activeChat) === null || _chatCtx$activeChat === void 0 ? void 0 : _chatCtx$activeChat.id),\n          onChangeChat: handleChangeChat\n        }, inbox.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"lMUtEvCR9M1b11o4oBuPRLTNh5U=\", false, function () {\n  return [useAppTheme, useNavigate, useChatContext];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useNavigate","useState","SidebarAlert","InboxContact","OptionsMenu","Icon","useAppTheme","useChatContext","Title","Action","Actions","ContactContainer","Header","SidebarContainer","Tabs","Sidebar","theme","navigate","chatCtx","activeTab","setActiveTab","tabCounts","ALL","inbox","length","Regulars","filter","chat","isRegular","Unread","isRead","Previous","isPrevious","abc","efch","sjvjhwe","handleChangeThemeMode","onChangeThemeMode","handleChangeChat","onChangeChat","id","handleTabChange","tab","map","activeChat"],"sources":["E:/priti/whatsapp-ui/telegram-ui/src/pages/chat/components/sidebar/index.tsx"],"sourcesContent":["// import { useNavigate } from \"react-router-dom\";\r\n// import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\n\r\n// import SidebarAlert from \"./alert\";\r\n// import InboxContact from \"./contacts\";\r\n// import OptionsMenu from \"../option-menu\";\r\n// import SearchField from \"../search-field\";\r\n// import Icon from \"common/components/icons\";\r\n// import { useAppTheme } from \"common/theme\";\r\n// import { Inbox } from \"common/types/common.type\";\r\n// import { useChatContext } from \"pages/chat/context/chat\";\r\n// import {\r\n//   Actions,\r\n//   Avatar,\r\n//   ContactContainer,\r\n//   Header,\r\n//   ImageWrapper,\r\n//   SidebarContainer,\r\n//   ThemeIconContainer,\r\n// } from \"./styles\";\r\n\r\n// export default function Sidebar() {\r\n//   const theme = useAppTheme();\r\n//   const navigate = useNavigate();\r\n//   const chatCtx = useChatContext();\r\n\r\n//   const handleChangeThemeMode = () => {\r\n//     theme.onChangeThemeMode();\r\n//   };\r\n\r\n//   const handleChangeChat = (chat: Inbox) => {\r\n//     chatCtx.onChangeChat(chat);\r\n//     navigate(\"/\" + chat.id);\r\n//   };\r\n\r\n//   return (\r\n//     <SidebarContainer>\r\n//       <Header>\r\n//         <ImageWrapper>\r\n//           <Avatar src=\"/assets/images/profile.png\" />\r\n//         </ImageWrapper>\r\n//         <Actions>\r\n//           <ThemeIconContainer onClick={handleChangeThemeMode}>\r\n//             {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n//           </ThemeIconContainer>\r\n//           <button aria-label=\"Status\">\r\n//             <Icon id=\"status\" className=\"icon\" />\r\n//           </button>\r\n//           <button aria-label=\"New chat\">\r\n//             <Icon id=\"chat\" className=\"icon\" />\r\n//           </button>\r\n//           <OptionsMenu\r\n//             iconClassName=\"icon\"\r\n//             className=\"icon\"\r\n//             ariaLabel=\"Menu\"\r\n//             iconId=\"menu\"\r\n//             options={[\r\n//               \"New group\",\r\n//               \"Create a room\",\r\n//               \"Profile\",\r\n//               \"Archived\",\r\n//               \"Starred\",\r\n//               \"Settings\",\r\n//               \"Log out\",\r\n//             ]}\r\n//           />\r\n//         </Actions>\r\n//       </Header>\r\n//       <SidebarAlert />\r\n//       <SearchField />\r\n//       <ContactContainer>\r\n//         {chatCtx.inbox.map((inbox) => (\r\n//           <InboxContact\r\n//             key={inbox.id}\r\n//             inbox={inbox}\r\n//             isActive={inbox.id === chatCtx.activeChat?.id}\r\n//             onChangeChat={handleChangeChat}\r\n//           />\r\n//         ))}\r\n//       </ContactContainer>\r\n//     </SidebarContainer>\r\n//   );\r\n// }\r\n\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\nimport { useState } from 'react'; // Import useState hook\r\n\r\nimport SidebarAlert from \"./alert\";\r\nimport InboxContact from \"./contacts\";\r\nimport OptionsMenu from \"../option-menu\";\r\nimport Icon from \"common/components/icons\";\r\nimport { useAppTheme } from \"common/theme\";\r\nimport { Inbox } from \"common/types/common.type\";\r\nimport { useChatContext } from \"pages/chat/context/chat\";\r\nimport { Text } from \"./alert/styles\";\r\nimport { Title } from \"pages/splash/styles\";\r\nimport {\r\n  Action,\r\n  Actions,\r\n  ContactContainer,\r\n  Header,\r\n  SidebarContainer,\r\n  ThemeIconContainer,\r\n} from \"./styles\";\r\nimport Tabs from \"./tabs\";\r\n\r\nexport default function Sidebar() {\r\n  const theme = useAppTheme();\r\n  const navigate = useNavigate();\r\n  const chatCtx = useChatContext();\r\n  const [activeTab, setActiveTab] = useState('ALL'); // State for active tab\r\n\r\n  const tabCounts = {\r\n    ALL: chatCtx.inbox.length,\r\n    Regulars: chatCtx.inbox.filter(chat => chat.isRegular).length,\r\n    Unread: chatCtx.inbox.filter(chat => !chat.isRead).length,\r\n    Previous: chatCtx.inbox.filter(chat => chat.isPrevious).length,\r\n    abc: 0, // Replace with actual count logic if available\r\n    efch: 0, // Replace with actual count logic if available\r\n    sjvjhwe: 0, // Replace with actual count logic if available\r\n  };\r\n\r\n  const handleChangeThemeMode = () => {\r\n    theme.onChangeThemeMode();\r\n  };\r\n\r\n  const handleChangeChat = (chat: Inbox) => {\r\n    chatCtx.onChangeChat(chat);\r\n    navigate(\"/\" + chat.id);\r\n  };\r\n\r\n  const handleTabChange = (tab: string) => {\r\n    setActiveTab(tab);\r\n    // Additional logic for tab change if necessary\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <Header>\r\n        <OptionsMenu\r\n          iconClassName=\"icon\"\r\n          className=\"icon\"\r\n          ariaLabel=\"Menu\"\r\n          iconId=\"menu\"\r\n          options={[\r\n            \"New group\",\r\n            \"Create a room\",\r\n            \"Profile\",\r\n            \"Archived\",\r\n            \"Starred\",\r\n            \"Settings\",\r\n            \"Log out\",\r\n          \r\n          ]}\r\n        />\r\n        <Title>Telegram</Title>\r\n        <Actions>\r\n        \r\n          <Action>\r\n            <Icon id=\"search\" className=\"icon search-icon\" />\r\n          </Action>\r\n        </Actions>\r\n      </Header>\r\n      <Tabs activeTab={activeTab} onChangeTab={handleTabChange} tabCounts={tabCounts} /> {/* Add Tabs component */}\r\n      <SidebarAlert />\r\n      {/* <SearchField /> */}\r\n      <ContactContainer>\r\n        {chatCtx.inbox.map((inbox) => (\r\n          <InboxContact\r\n            key={inbox.id}\r\n            inbox={inbox}\r\n            isActive={inbox.id === chatCtx.activeChat?.id}\r\n            onChangeChat={handleChangeChat}\r\n          />\r\n        ))}\r\n      </ContactContainer>\r\n    </SidebarContainer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
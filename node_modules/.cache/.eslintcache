[{"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\index.tsx":"1","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\global-styles.tsx":"2","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\App.tsx":"3","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\theme\\index.tsx":"4","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\loader\\index.tsx":"5","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\hooks\\useAppLoad.tsx":"6","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\theme\\dark.tsx":"7","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\theme\\light.tsx":"8","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\loader\\page-loader.tsx":"9","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\splash\\index.tsx":"10","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\routes\\index.tsx":"11","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\splash\\styles.tsx":"12","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\context\\chat.tsx":"13","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\unselected-page\\index.tsx":"14","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\index.tsx":"15","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\unselected-page\\styles.tsx":"16","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\styles.tsx":"17","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\hooks\\useChatRoom.tsx":"18","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\hooks\\useNavigateToChat.tsx":"19","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\layouts\\index.tsx":"20","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\icons\\index.tsx":"21","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\header\\index.tsx":"22","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\footer\\index.tsx":"23","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\profile\\index.tsx":"24","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\sidebar\\index.tsx":"25","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\search-section\\index.tsx":"26","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\index.tsx":"27","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\layouts\\styles.tsx":"28","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\icons\\list-icons.tsx":"29","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\header\\styles.tsx":"30","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\footer\\styles.tsx":"31","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\profile\\styles.tsx":"32","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\sidebar\\styles.tsx":"33","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\search-section\\styles.tsx":"34","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\styles.tsx":"35","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\data\\get-messages.ts":"36","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\hooks\\useScrollToBottom.tsx":"37","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\index.tsx":"38","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\option-menu\\index.tsx":"39","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\icons\\styles.tsx":"40","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\styles.tsx":"41","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\search-field\\index.tsx":"42","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\option-menu\\styles.tsx":"43","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\hooks\\useCloseMenu.tsx":"44","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\alert\\styles.tsx":"45","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\alert\\index.tsx":"46","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\contacts\\index.tsx":"47","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\tabs\\index.tsx":"48","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\search-field\\styles.tsx":"49","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\contacts\\styles.tsx":"50"},{"size":496,"mtime":1699074219763,"results":"51","hashOfConfig":"52"},{"size":1425,"mtime":1699074219762,"results":"53","hashOfConfig":"52"},{"size":348,"mtime":1699074219750,"results":"54","hashOfConfig":"52"},{"size":1370,"mtime":1699074219759,"results":"55","hashOfConfig":"52"},{"size":75,"mtime":1699074219755,"results":"56","hashOfConfig":"52"},{"size":2373,"mtime":1699074219757,"results":"57","hashOfConfig":"52"},{"size":2243,"mtime":1699074219758,"results":"58","hashOfConfig":"52"},{"size":1971,"mtime":1699074219759,"results":"59","hashOfConfig":"52"},{"size":446,"mtime":1699074219756,"results":"60","hashOfConfig":"52"},{"size":498,"mtime":1721054080114,"results":"61","hashOfConfig":"52"},{"size":686,"mtime":1721056807161,"results":"62","hashOfConfig":"52"},{"size":1705,"mtime":1721054066501,"results":"63","hashOfConfig":"52"},{"size":3901,"mtime":1721056574266,"results":"64","hashOfConfig":"52"},{"size":665,"mtime":1721065297689,"results":"65","hashOfConfig":"52"},{"size":2196,"mtime":1721050775947,"results":"66","hashOfConfig":"52"},{"size":1255,"mtime":1721051272648,"results":"67","hashOfConfig":"52"},{"size":1210,"mtime":1721052208192,"results":"68","hashOfConfig":"52"},{"size":1014,"mtime":1699074219784,"results":"69","hashOfConfig":"52"},{"size":401,"mtime":1699074219785,"results":"70","hashOfConfig":"52"},{"size":382,"mtime":1721048117478,"results":"71","hashOfConfig":"52"},{"size":304,"mtime":1699074219752,"results":"72","hashOfConfig":"52"},{"size":1331,"mtime":1720986065078,"results":"73","hashOfConfig":"52"},{"size":1217,"mtime":1721054344706,"results":"74","hashOfConfig":"52"},{"size":2031,"mtime":1699074219776,"results":"75","hashOfConfig":"52"},{"size":652,"mtime":1699074219781,"results":"76","hashOfConfig":"52"},{"size":255,"mtime":1699074219778,"results":"77","hashOfConfig":"52"},{"size":2225,"mtime":1721065356511,"results":"78","hashOfConfig":"52"},{"size":1036,"mtime":1721049098506,"results":"79","hashOfConfig":"52"},{"size":31268,"mtime":1721066583875,"results":"80","hashOfConfig":"52"},{"size":1666,"mtime":1699074219770,"results":"81","hashOfConfig":"52"},{"size":2095,"mtime":1699074219769,"results":"82","hashOfConfig":"52"},{"size":2560,"mtime":1699074219777,"results":"83","hashOfConfig":"52"},{"size":1231,"mtime":1699074219782,"results":"84","hashOfConfig":"52"},{"size":561,"mtime":1699074219778,"results":"85","hashOfConfig":"52"},{"size":3696,"mtime":1699074219775,"results":"86","hashOfConfig":"52"},{"size":4315,"mtime":1699074219772,"results":"87","hashOfConfig":"52"},{"size":1181,"mtime":1699074219773,"results":"88","hashOfConfig":"52"},{"size":5460,"mtime":1721059481645,"results":"89","hashOfConfig":"52"},{"size":9859,"mtime":1721054206892,"results":"90","hashOfConfig":"52"},{"size":102,"mtime":1699074219754,"results":"91","hashOfConfig":"52"},{"size":1794,"mtime":1721026734809,"results":"92","hashOfConfig":"52"},{"size":646,"mtime":1699074219790,"results":"93","hashOfConfig":"52"},{"size":1807,"mtime":1721043255035,"results":"94","hashOfConfig":"52"},{"size":512,"mtime":1699074219802,"results":"95","hashOfConfig":"52"},{"size":1088,"mtime":1699074219792,"results":"96","hashOfConfig":"52"},{"size":747,"mtime":1721023556904,"results":"97","hashOfConfig":"52"},{"size":2283,"mtime":1721065876064,"results":"98","hashOfConfig":"52"},{"size":2917,"mtime":1721044275639,"results":"99","hashOfConfig":"52"},{"size":1471,"mtime":1699074219790,"results":"100","hashOfConfig":"52"},{"size":3014,"mtime":1721065465298,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fcribk",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\global-styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\App.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\theme\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\loader\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\hooks\\useAppLoad.tsx",[],["259"],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\theme\\dark.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\theme\\light.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\loader\\page-loader.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\splash\\index.tsx",["260","261"],[],"import {\r\n  Container,\r\n  Link,\r\n  Logo,\r\n  LogoWrapper,\r\n  Progress,\r\n  SubTitle,\r\n  Title,\r\n} from \"./styles\";\r\n\r\ntype SplashPageProps = {\r\n  progress: number;\r\n};\r\n\r\nexport default function SplashPage(props: SplashPageProps) {\r\n  const { progress } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <LogoWrapper>\r\n        <Logo src=\"./Telegram_logo.png\" alt=\"Telegram Logo\" />\r\n      </LogoWrapper>\r\n      <Progress progress={progress} />\r\n      <Title>Telegram</Title>\r\n    </Container>\r\n  );\r\n}\r\n","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\routes\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\splash\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\context\\chat.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\unselected-page\\index.tsx",["262","263","264","265","266"],[],"import ChatLayout from \"../layouts\";\r\nimport Icon from \"common/components/icons\";\r\nimport { useAppTheme } from \"common/theme\";\r\nimport { Container, ImageWrapper, Title, IconWrapper, Link, Image, Text } from \"./styles\";\r\n\r\nexport default function UnSelectedChatPage() {\r\n  const theme = useAppTheme();\r\n\r\n  const getImageURL = () => {\r\n    if (theme.mode === \"light\") return \"/assets/images/telegram_bg.png\";\r\n    return \"/assets/images/telegram_dark_bg.png\";\r\n  };\r\n\r\n  return (\r\n    <ChatLayout>\r\n      <Container>\r\n        <ImageWrapper>\r\n          <Image src={getImageURL()} />\r\n        </ImageWrapper>\r\n        \r\n      </Container>\r\n    </ChatLayout>\r\n  );\r\n}\r\n","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\unselected-page\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\hooks\\useChatRoom.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\hooks\\useNavigateToChat.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\layouts\\index.tsx",["267"],[],"import Sidebar from \"../components/sidebar\";\r\nimport { App, Content, Message } from \"./styles\";\r\n\r\nexport default function ChatLayout(props: { children: any }) {\r\n  return (\r\n    <App>\r\n      {/* <Message>Currently Only available on desktop or large devices 😊.</Message> */}\r\n      <Content>\r\n        <Sidebar />\r\n        {props.children}\r\n      </Content>\r\n    </App>\r\n  );\r\n}\r\n","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\icons\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\header\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\footer\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\profile\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\sidebar\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\search-section\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\index.tsx",["268"],["269"],"import { forwardRef, useMemo } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Icon from \"common/components/icons\";\r\nimport useScrollToBottom from \"./hooks/useScrollToBottom\";\r\nimport { getMessages, Message } from \"./data/get-messages\";\r\nimport {\r\n  ChatMessage,\r\n  ChatMessageFiller,\r\n  ChatMessageFooter,\r\n  Container,\r\n  Date,\r\n  DateWrapper,\r\n  EncryptionMessage,\r\n  MessageGroup,\r\n} from \"./styles\";\r\n\r\ntype MessagesListProps = {\r\n  onShowBottomIcon: Function;\r\n  shouldScrollToBottom?: boolean;\r\n};\r\n\r\nexport default function MessagesList(props: MessagesListProps) {\r\n  const { onShowBottomIcon, shouldScrollToBottom } = props;\r\n\r\n  const params = useParams();\r\n  const messages = useMemo(() => {\r\n    return getMessages();\r\n    // eslint-disable-next-line\r\n  }, [params.id]);\r\n  const { containerRef, lastMessageRef } = useScrollToBottom(\r\n    onShowBottomIcon,\r\n    shouldScrollToBottom,\r\n    params.id\r\n  );\r\n\r\n  return (\r\n    <Container ref={containerRef}>\r\n      \r\n      <DateWrapper>\r\n        <Date> TODAY </Date>\r\n      </DateWrapper>\r\n      <MessageGroup>\r\n        {messages.map((message, i) => {\r\n          if (i === messages.length - 1) {\r\n            return <SingleMessage key={message.id} message={message} ref={lastMessageRef} />;\r\n          } else {\r\n            return <SingleMessage key={message.id} message={message} />;\r\n          }\r\n        })}\r\n      </MessageGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst SingleMessage = forwardRef((props: { message: Message }, ref: any) => {\r\n  const { message } = props;\r\n\r\n  return (\r\n    <ChatMessage\r\n      key={message.id}\r\n      className={message.isOpponent ? \"chat__msg--received\" : \"chat__msg--sent\"}\r\n      ref={ref}\r\n    >\r\n      <span>{message.body}</span>\r\n      <ChatMessageFiller />\r\n      <ChatMessageFooter>\r\n        <span>{message.timestamp}</span>\r\n        {!message.isOpponent && (\r\n          <Icon\r\n            id={`${message.messageStatus === \"SENT\" ? \"singleTick\" : \"doubleTick\"}`}\r\n            className={`chat__msg-status-icon ${\r\n              message.messageStatus === \"READ\" ? \"chat__msg-status-icon--blue\" : \"\"\r\n            }`}\r\n          />\r\n        )}\r\n      </ChatMessageFooter>\r\n    </ChatMessage>\r\n  );\r\n});\r\n","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\layouts\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\icons\\list-icons.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\header\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\footer\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\profile\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\sidebar\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\search-section\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\data\\get-messages.ts",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\chat-room-page\\components\\messages-list\\hooks\\useScrollToBottom.tsx",[],["270"],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\index.tsx",["271","272","273","274","275"],[],"// import { useNavigate } from \"react-router-dom\";\r\n// import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\n\r\n// import SidebarAlert from \"./alert\";\r\n// import InboxContact from \"./contacts\";\r\n// import OptionsMenu from \"../option-menu\";\r\n// import SearchField from \"../search-field\";\r\n// import Icon from \"common/components/icons\";\r\n// import { useAppTheme } from \"common/theme\";\r\n// import { Inbox } from \"common/types/common.type\";\r\n// import { useChatContext } from \"pages/chat/context/chat\";\r\n// import {\r\n//   Actions,\r\n//   Avatar,\r\n//   ContactContainer,\r\n//   Header,\r\n//   ImageWrapper,\r\n//   SidebarContainer,\r\n//   ThemeIconContainer,\r\n// } from \"./styles\";\r\n\r\n// export default function Sidebar() {\r\n//   const theme = useAppTheme();\r\n//   const navigate = useNavigate();\r\n//   const chatCtx = useChatContext();\r\n\r\n//   const handleChangeThemeMode = () => {\r\n//     theme.onChangeThemeMode();\r\n//   };\r\n\r\n//   const handleChangeChat = (chat: Inbox) => {\r\n//     chatCtx.onChangeChat(chat);\r\n//     navigate(\"/\" + chat.id);\r\n//   };\r\n\r\n//   return (\r\n//     <SidebarContainer>\r\n//       <Header>\r\n//         <ImageWrapper>\r\n//           <Avatar src=\"/assets/images/profile.png\" />\r\n//         </ImageWrapper>\r\n//         <Actions>\r\n//           <ThemeIconContainer onClick={handleChangeThemeMode}>\r\n//             {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n//           </ThemeIconContainer>\r\n//           <button aria-label=\"Status\">\r\n//             <Icon id=\"status\" className=\"icon\" />\r\n//           </button>\r\n//           <button aria-label=\"New chat\">\r\n//             <Icon id=\"chat\" className=\"icon\" />\r\n//           </button>\r\n//           <OptionsMenu\r\n//             iconClassName=\"icon\"\r\n//             className=\"icon\"\r\n//             ariaLabel=\"Menu\"\r\n//             iconId=\"menu\"\r\n//             options={[\r\n//               \"New group\",\r\n//               \"Create a room\",\r\n//               \"Profile\",\r\n//               \"Archived\",\r\n//               \"Starred\",\r\n//               \"Settings\",\r\n//               \"Log out\",\r\n//             ]}\r\n//           />\r\n//         </Actions>\r\n//       </Header>\r\n//       <SidebarAlert />\r\n//       <SearchField />\r\n//       <ContactContainer>\r\n//         {chatCtx.inbox.map((inbox) => (\r\n//           <InboxContact\r\n//             key={inbox.id}\r\n//             inbox={inbox}\r\n//             isActive={inbox.id === chatCtx.activeChat?.id}\r\n//             onChangeChat={handleChangeChat}\r\n//           />\r\n//         ))}\r\n//       </ContactContainer>\r\n//     </SidebarContainer>\r\n//   );\r\n// }\r\n\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\nimport { useState } from 'react'; // Import useState hook\r\n\r\nimport SidebarAlert from \"./alert\";\r\nimport InboxContact from \"./contacts\";\r\nimport OptionsMenu from \"../option-menu\";\r\nimport Icon from \"common/components/icons\";\r\nimport { useAppTheme } from \"common/theme\";\r\nimport { Inbox } from \"common/types/common.type\";\r\nimport { useChatContext } from \"pages/chat/context/chat\";\r\nimport { Text } from \"./alert/styles\";\r\nimport { Title } from \"pages/splash/styles\";\r\nimport {\r\n  Action,\r\n  Actions,\r\n  ContactContainer,\r\n  Header,\r\n  SidebarContainer,\r\n  ThemeIconContainer,\r\n} from \"./styles\";\r\nimport Tabs from \"./tabs\";\r\n\r\nexport default function Sidebar() {\r\n  const theme = useAppTheme();\r\n  const navigate = useNavigate();\r\n  const chatCtx = useChatContext();\r\n  const [activeTab, setActiveTab] = useState('ALL'); // State for active tab\r\n\r\n  const tabCounts = {\r\n    ALL: chatCtx.inbox.length,\r\n    Regulars: chatCtx.inbox.filter(chat => chat.isRegular).length,\r\n    Unread: chatCtx.inbox.filter(chat => !chat.isRead).length,\r\n    Previous: chatCtx.inbox.filter(chat => chat.isPrevious).length,\r\n    abc: 0, // Replace with actual count logic if available\r\n    efch: 0, // Replace with actual count logic if available\r\n    sjvjhwe: 0, // Replace with actual count logic if available\r\n  };\r\n\r\n  const handleChangeThemeMode = () => {\r\n    theme.onChangeThemeMode();\r\n  };\r\n\r\n  const handleChangeChat = (chat: Inbox) => {\r\n    chatCtx.onChangeChat(chat);\r\n    navigate(\"/\" + chat.id);\r\n  };\r\n\r\n  const handleTabChange = (tab: string) => {\r\n    setActiveTab(tab);\r\n    // Additional logic for tab change if necessary\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <Header>\r\n        <OptionsMenu\r\n          iconClassName=\"icon\"\r\n          className=\"icon\"\r\n          ariaLabel=\"Menu\"\r\n          iconId=\"menu\"\r\n          options={[\r\n            \"New group\",\r\n            \"Create a room\",\r\n            \"Profile\",\r\n            \"Archived\",\r\n            \"Starred\",\r\n            \"Settings\",\r\n            \"Log out\",\r\n          \r\n          ]}\r\n        />\r\n        <Title>Telegram</Title>\r\n        <Actions>\r\n        \r\n          <Action>\r\n            <Icon id=\"search\" className=\"icon search-icon\" />\r\n          </Action>\r\n        </Actions>\r\n      </Header>\r\n      <Tabs activeTab={activeTab} onChangeTab={handleTabChange} tabCounts={tabCounts} /> {/* Add Tabs component */}\r\n      <SidebarAlert />\r\n      {/* <SearchField /> */}\r\n      <ContactContainer>\r\n        {chatCtx.inbox.map((inbox) => (\r\n          <InboxContact\r\n            key={inbox.id}\r\n            inbox={inbox}\r\n            isActive={inbox.id === chatCtx.activeChat?.id}\r\n            onChangeChat={handleChangeChat}\r\n          />\r\n        ))}\r\n      </ContactContainer>\r\n    </SidebarContainer>\r\n  );\r\n}\r\n","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\option-menu\\index.tsx",["276"],[],"// // import { useState } from \"react\";\r\n// // import Icon from \"common/components/icons\";\r\n// // import useCloseMenu from \"../../hooks/useCloseMenu\";\r\n// // import { Container, Button, Options, Option } from \"./styles\";\r\n// // import Header from \"pages/chat/chat-room-page/components/header\";\r\n// // import { ThemeIconContainer } from \"../sidebar/styles\";\r\n// // import { Action } from \"../sidebar/styles\";\r\n// // import { Actions } from \"../sidebar/styles\";\r\n// // import { useAppTheme } from \"common/theme\";\r\n// // import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\n// // import { ImageWrapper } from \"../sidebar/styles\";\r\n// // import { Avatar } from \"../sidebar/styles\";\r\n// // import { Profile } from \"./styles\";\r\n\r\n// // type OptionsMenuProps = {\r\n// //   iconClassName?: string;\r\n// //   className?: string;\r\n// //   iconId: string;\r\n// //   ariaLabel?: string;\r\n// //   options: string[];\r\n// //   position?: string;\r\n// //   showPressed?: boolean;\r\n// //   [x: string]: any;\r\n// // };\r\n\r\n// // export default function OptionsMenu(props: OptionsMenuProps) {\r\n// //   const [showOptions, setShowOptions] = useState(false);\r\n// //   const ref = useCloseMenu(() => setShowOptions(false));\r\n// //   const theme = useAppTheme();\r\n// //   const {\r\n// //     iconId,\r\n// //     options,\r\n// //     ariaLabel,\r\n// //     className,\r\n// //     iconClassName,\r\n// //     position = \"left\",\r\n// //     showPressed = true,\r\n// //   } = props;\r\n\r\n// //   const getBtnClassName = (): string => {\r\n// //     let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\r\n// //     _className += className ?? \"\";\r\n\r\n// //     return _className;\r\n// //   };\r\n\r\n// //   const getOptionsClassName = (): string => {\r\n// //     let className = showOptions ? \"active \" : \"\";\r\n// //     className += position === \"right\" ? \"right\" : \"\";\r\n\r\n// //     return className;\r\n// //   };\r\n\r\n// //   const handleClick = () => {\r\n// //     setShowOptions(!showOptions);\r\n// //   };\r\n  \r\n// //   const handleChangeThemeMode = () => {\r\n// //     theme.onChangeThemeMode();\r\n// //   };\r\n\r\n\r\n// //   return (\r\n// //     <Container ref={ref}>\r\n// //       <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\r\n// //         <Icon id={iconId} className={iconClassName} />\r\n// //       </Button>\r\n      \r\n// //       <Options className={getOptionsClassName()}>\r\n// //       <Profile>\r\n// //          <ImageWrapper>\r\n// //         <Avatar src=\"/assets/images/profile.png\" />\r\n// //         </ImageWrapper>\r\n// //         <Actions>\r\n// //           <ThemeIconContainer onClick={handleChangeThemeMode}>\r\n// //             {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n// //           </ThemeIconContainer>\r\n        \r\n// //         </Actions>\r\n// //         </Profile>\r\n// //         {options.map((option) => (\r\n// //           <Option key={option}>{option}</Option>\r\n// //         ))}\r\n// //       </Options>\r\n// //     </Container>\r\n// //   );\r\n// // }\r\n\r\n// import { useState, useEffect, useRef } from \"react\";\r\n// import Icon from \"common/components/icons\";\r\n// import useCloseMenu from \"../../hooks/useCloseMenu\";\r\n// import {\r\n//   Container,\r\n//   Button,\r\n//   Options,\r\n//   Option,\r\n//   Profile,\r\n//   ImageWrapper,\r\n//   Avatar,\r\n//   Actions,\r\n//   ThemeIconContainer,\r\n// } from \"./styles\";\r\n// import { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\n// import { useAppTheme } from \"common/theme\";\r\n\r\n// type OptionsMenuProps = {\r\n//   iconClassName?: string;\r\n//   className?: string;\r\n//   iconId: string;\r\n//   ariaLabel?: string;\r\n//   options: string[];\r\n//   position?: string;\r\n//   showPressed?: boolean;\r\n//   [x: string]: any;\r\n// };\r\n\r\n// export default function OptionsMenu(props: OptionsMenuProps) {\r\n//   const theme = useAppTheme();\r\n//   const [showOptions, setShowOptions] = useState(false);\r\n//   const [touchStartX, setTouchStartX] = useState(0);\r\n//   const [touchEndX, setTouchEndX] = useState(0);\r\n//   const optionsRef = useRef<HTMLDivElement>(null);\r\n  \r\n//   const {\r\n//     iconId,\r\n//     options,\r\n//     ariaLabel,\r\n//     className,\r\n//     iconClassName,\r\n//     position = \"left\",\r\n//     showPressed = true,\r\n//   } = props;\r\n\r\n//   const getBtnClassName = (): string => {\r\n//     let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\r\n//     _className += className ?? \"\";\r\n\r\n//     return _className;\r\n//   };\r\n\r\n//   const getOptionsClassName = (): string => {\r\n//     let className = showOptions ? \"active \" : \"\";\r\n//     className += position === \"right\" ? \"right\" : \"\";\r\n\r\n//     return className;\r\n//   };\r\n\r\n//   const handleClick = () => {\r\n//     setShowOptions(!showOptions);\r\n//   };\r\n\r\n//   const handleChangeThemeMode = () => {\r\n//     theme.onChangeThemeMode();\r\n//   };\r\n\r\n//   const handleTouchStart = (e: TouchEvent) => {\r\n//     setTouchStartX(e.targetTouches[0].clientX);\r\n//   };\r\n\r\n//   const handleTouchMove = (e: TouchEvent) => {\r\n//     setTouchEndX(e.targetTouches[0].clientX);\r\n//   };\r\n\r\n//   const handleTouchEnd = () => {\r\n//     if (touchStartX - touchEndX > 50) {\r\n//       setShowOptions(false);\r\n//     }\r\n//     if (touchEndX - touchStartX > 50) {\r\n//       setShowOptions(true);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const optionsElement = optionsRef.current;\r\n//     if (optionsElement) {\r\n//       optionsElement.addEventListener(\"touchstart\", handleTouchStart);\r\n//       optionsElement.addEventListener(\"touchmove\", handleTouchMove);\r\n//       optionsElement.addEventListener(\"touchend\", handleTouchEnd);\r\n\r\n//       return () => {\r\n//         optionsElement.removeEventListener(\"touchstart\", handleTouchStart);\r\n//         optionsElement.removeEventListener(\"touchmove\", handleTouchMove);\r\n//         optionsElement.removeEventListener(\"touchend\", handleTouchEnd);\r\n//       };\r\n//     }\r\n//   }, [touchStartX, touchEndX]);\r\n\r\n//   return (\r\n//     <Container>\r\n//       <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\r\n//         <Icon id={iconId} className={iconClassName} />\r\n//       </Button>\r\n      \r\n//       <Options className={getOptionsClassName()} ref={optionsRef}>\r\n//         <Profile>\r\n//           <ImageWrapper>\r\n//             <Avatar src=\"/assets/images/profile.png\" />\r\n//           </ImageWrapper>\r\n//           <Actions>\r\n//             <ThemeIconContainer onClick={handleChangeThemeMode}>\r\n//               {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n//             </ThemeIconContainer>\r\n//           </Actions>\r\n//         </Profile>\r\n//         {options.map((option) => (\r\n//           <Option key={option}>{option}</Option>\r\n//         ))}\r\n//       </Options>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport Icon from \"common/components/icons\";\r\nimport useCloseMenu from \"../../hooks/useCloseMenu\";\r\nimport { Container, Button, Options, Option, ImgSection, ImageWrapper, Profile, Avatar, Actions, ThemeIconContainer } from \"./styles\";\r\nimport { BsFillMoonFill, BsMoon } from \"react-icons/bs\";\r\nimport { useAppTheme } from \"common/theme\";\r\nimport { Text } from '../sidebar/alert/styles';\r\n\r\ntype OptionsMenuProps = {\r\n  iconClassName?: string;\r\n  className?: string;\r\n  iconId: string;\r\n  ariaLabel?: string;\r\n  options: string[];\r\n  position?: string;\r\n  showPressed?: boolean;\r\n  [x: string]: any;\r\n};\r\n\r\nexport default function OptionsMenu(props: OptionsMenuProps) {\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [touchStartX, setTouchStartX] = useState(0);\r\n  const [touchEndX, setTouchEndX] = useState(0);\r\n  const ref = useCloseMenu(() => setShowOptions(false));\r\n  const theme = useAppTheme();\r\n\r\n  const {\r\n    iconId,\r\n    options,\r\n    ariaLabel,\r\n    className,\r\n    iconClassName,\r\n    position = \"left\",\r\n    showPressed = true,\r\n  } = props;\r\n\r\n  const getBtnClassName = (): string => {\r\n    let _className = showOptions && showPressed ? \"btn-pressed \" : \"\";\r\n    _className += className ?? \"\";\r\n\r\n    return _className;\r\n  };\r\n\r\n  const getOptionsClassName = (): string => {\r\n    let className = showOptions ? \"active \" : \"\";\r\n    className += position === \"right\" ? \"right\" : \"\";\r\n\r\n    return className;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    setTouchStartX(e.targetTouches[0].clientX);\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    setTouchEndX(e.targetTouches[0].clientX);\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (touchStartX - touchEndX > 50) {\r\n      setShowOptions(false); // swipe left to close\r\n    }\r\n    if (touchEndX - touchStartX > 50) {\r\n      setShowOptions(true); // swipe right to open\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <Button aria-label={ariaLabel} className={getBtnClassName()} onClick={handleClick}>\r\n        <Icon id={iconId} className={iconClassName} />\r\n      </Button>\r\n      \r\n      <Options\r\n        className={getOptionsClassName()}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n      >\r\n       \r\n        <Profile>\r\n          <ImgSection>\r\n          <ImageWrapper>\r\n            <Avatar src=\"/assets/images/boy1.webp\" />\r\n          </ImageWrapper>\r\n          <Actions>\r\n            <ThemeIconContainer onClick={theme.onChangeThemeMode}>\r\n              {theme.mode === \"light\" ? <BsMoon /> : <BsFillMoonFill />}\r\n            </ThemeIconContainer>\r\n          </Actions>\r\n          </ImgSection>\r\n          <Text>Priti Sahani</Text>\r\n          <Text style={{ fontSize: \"12px\" }}>+919695295703</Text>\r\n\r\n        </Profile>\r\n         \r\n        \r\n        \r\n        {options.map((option) => (\r\n          <Option key={option}>{option}</Option>\r\n        ))}\r\n      </Options>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\common\\components\\icons\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\search-field\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\option-menu\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\hooks\\useCloseMenu.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\alert\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\alert\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\contacts\\index.tsx",["277"],[],"import Icon from \"common/components/icons\";\r\nimport { Inbox } from \"common/types/common.type\";\r\nimport {\r\n  Avatar,\r\n  AvatarWrapper,\r\n  BottomContent,\r\n  Contact,\r\n  Content,\r\n  MessageStatusIcon,\r\n  MessageWrapper,\r\n  Name,\r\n  Subtitle,\r\n  Time,\r\n  TopContent,\r\n  UnreadContact,\r\n} from \"./styles\";\r\n\r\ntype InboxContactProps = {\r\n  inbox: Inbox;\r\n  onChangeChat?: Function;\r\n  isActive?: boolean;\r\n};\r\n\r\nexport default function InboxContact(props: InboxContactProps) {\r\n  const { onChangeChat, isActive } = props;\r\n  const { name, lastMessage, image, timestamp } = props.inbox;\r\n\r\n  const handleChangeChat = () => {\r\n    if (onChangeChat) {\r\n      onChangeChat(props.inbox);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Contact isActive={isActive} onClick={handleChangeChat}>\r\n      <AvatarWrapper>\r\n        <Avatar  />\r\n      </AvatarWrapper>\r\n      <Content>\r\n        <TopContent>\r\n          <Name>{name}</Name>\r\n          {timestamp && lastMessage ? <Time>{timestamp}</Time> : <Trailing {...props.inbox} />}\r\n        </TopContent>\r\n\r\n        <BottomContent>\r\n          <MessageWrapper>\r\n            <Message {...props.inbox} />\r\n          </MessageWrapper>\r\n\r\n          {timestamp && lastMessage && <Trailing {...props.inbox} />}\r\n        </BottomContent>\r\n      </Content>\r\n    </Contact>\r\n  );\r\n}\r\n\r\nfunction Message(props: Pick<Inbox, \"messageStatus\" | \"lastMessage\">) {\r\n  const { lastMessage, messageStatus } = props;\r\n\r\n  if (!lastMessage) return <></>;\r\n\r\n  return (\r\n    <>\r\n      <MessageStatusIcon\r\n        isRead={messageStatus === \"READ\"}\r\n        id={messageStatus === \"SENT\" ? \"singleTick\" : \"doubleTick\"}\r\n      />\r\n      <Subtitle>{lastMessage}</Subtitle>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Trailing(props: Pick<Inbox, \"isPinned\" | \"notificationsCount\">) {\r\n  const { isPinned, notificationsCount } = props;\r\n\r\n  return (\r\n    <div className=\"sidebar-contact__icons\">\r\n      {isPinned && <Icon id=\"pinned\" className=\"sidebar-contact__icon\" />}\r\n\r\n      {notificationsCount !== undefined && notificationsCount > 0 && (\r\n        <UnreadContact>{notificationsCount}</UnreadContact>\r\n      )}\r\n\r\n      <button aria-label=\"sidebar-contact__btn\">\r\n        <Icon id=\"downArrow\" className=\"sidebar-contact__icon sidebar-contact__icon--dropdown\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\tabs\\index.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\search-field\\styles.tsx",[],[],"E:\\priti\\whatsapp-ui\\telegram-ui\\src\\pages\\chat\\components\\sidebar\\contacts\\styles.tsx",[],[],{"ruleId":"278","severity":1,"message":"279","line":51,"column":6,"nodeType":"280","endLine":51,"endColumn":8,"suggestions":"281","suppressions":"282"},{"ruleId":"283","severity":1,"message":"284","line":3,"column":3,"nodeType":"285","messageId":"286","endLine":3,"endColumn":7},{"ruleId":"283","severity":1,"message":"287","line":7,"column":3,"nodeType":"285","messageId":"286","endLine":7,"endColumn":11},{"ruleId":"283","severity":1,"message":"288","line":2,"column":8,"nodeType":"285","messageId":"286","endLine":2,"endColumn":12},{"ruleId":"283","severity":1,"message":"289","line":4,"column":35,"nodeType":"285","messageId":"286","endLine":4,"endColumn":40},{"ruleId":"283","severity":1,"message":"290","line":4,"column":42,"nodeType":"285","messageId":"286","endLine":4,"endColumn":53},{"ruleId":"283","severity":1,"message":"284","line":4,"column":55,"nodeType":"285","messageId":"286","endLine":4,"endColumn":59},{"ruleId":"283","severity":1,"message":"291","line":4,"column":68,"nodeType":"285","messageId":"286","endLine":4,"endColumn":72},{"ruleId":"283","severity":1,"message":"292","line":2,"column":24,"nodeType":"285","messageId":"286","endLine":2,"endColumn":31},{"ruleId":"283","severity":1,"message":"293","line":14,"column":3,"nodeType":"285","messageId":"286","endLine":14,"endColumn":20},{"ruleId":"278","severity":1,"message":"294","line":30,"column":6,"nodeType":"280","endLine":30,"endColumn":17,"suggestions":"295","suppressions":"296"},{"ruleId":"278","severity":1,"message":"297","line":26,"column":6,"nodeType":"280","endLine":26,"endColumn":30,"suggestions":"298","suppressions":"299"},{"ruleId":"283","severity":1,"message":"300","line":87,"column":10,"nodeType":"285","messageId":"286","endLine":87,"endColumn":24},{"ruleId":"283","severity":1,"message":"301","line":87,"column":26,"nodeType":"285","messageId":"286","endLine":87,"endColumn":32},{"ruleId":"283","severity":1,"message":"291","line":97,"column":10,"nodeType":"285","messageId":"286","endLine":97,"endColumn":14},{"ruleId":"283","severity":1,"message":"302","line":105,"column":3,"nodeType":"285","messageId":"286","endLine":105,"endColumn":21},{"ruleId":"283","severity":1,"message":"303","line":125,"column":9,"nodeType":"285","messageId":"286","endLine":125,"endColumn":30},{"ruleId":"283","severity":1,"message":"304","line":213,"column":27,"nodeType":"285","messageId":"286","endLine":213,"endColumn":33},{"ruleId":"283","severity":1,"message":"305","line":26,"column":30,"nodeType":"285","messageId":"286","endLine":26,"endColumn":35},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_initiateProgress' and 'isProgressStartAutomatically'. Either include them or remove the dependency array.","ArrayExpression",["306"],["307"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SubTitle' is defined but never used.","'Icon' is defined but never used.","'Title' is defined but never used.","'IconWrapper' is defined but never used.","'Text' is defined but never used.","'Message' is defined but never used.","'EncryptionMessage' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'params.id'. Either exclude it or remove the dependency array.",["308"],["309"],"React Hook useEffect has a missing dependency: '_toggleScrollBottomIcon'. Either include it or remove the dependency array.",["310"],["311"],"'BsFillMoonFill' is defined but never used.","'BsMoon' is defined but never used.","'ThemeIconContainer' is defined but never used.","'handleChangeThemeMode' is assigned a value but never used.","'useRef' is defined but never used.","'image' is assigned a value but never used.",{"desc":"312","fix":"313"},{"kind":"314","justification":"315"},{"desc":"316","fix":"317"},{"kind":"314","justification":"315"},{"desc":"318","fix":"319"},{"kind":"314","justification":"315"},"Update the dependencies array to be: [_initiateProgress, isProgressStartAutomatically]",{"range":"320","text":"321"},"directive","","Update the dependencies array to be: []",{"range":"322","text":"323"},"Update the dependencies array to be: [containerRef, callback, _toggleScrollBottomIcon]",{"range":"324","text":"325"},[1397,1399],"[_initiateProgress, isProgressStartAutomatically]",[792,803],"[]",[820,844],"[containerRef, callback, _toggleScrollBottomIcon]"]